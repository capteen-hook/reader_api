services:
  flask_server:
    build:
      context: ./flask_server
      dockerfile: Dockerfile
    container_name: ${FLASK_SERVER_CONTAINER_NAME:-flask_server}
    depends_on:
      - tika
      - rabbitmq
    restart: always
    ports:
      - "${PORT:-8000}:8000"
    networks:
      - tika_network
    environment:
      TIKA_URL: ${TIKA_URL:-http://tika:9998/tika}
      RABBITMQ_URL: ${RABBITMQ_URL:-http://rabbitmq:15672/api/}
      OLLAMA_URL: ${OLLAMA_URL:-http://ollama:11434/}
      POPPLER_PATH: ${POPPLER_PATH:-}
      TRANSFORMERS_CACHE: ${TRANSFORMERS_CACHE:-/tmp/transformers_cache}
      WORK_DIR: ${WORK_DIR:-/tmp/workdir}
      MODEL_NAME: ${MODEL_NAME:-gemma3:4b}
      PORT: ${PORT:-8000}
      TAVILY_KEY: ${TAVILY_KEY:-}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-supersecretkey}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8000}/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  tika:
    image: ${TIKA_IMAGE:-apache/tika:latest-full}
    container_name: ${TIKA_CONTAINER_NAME:-tika}
    ports:
      - "${TIKA_PORT:-9998}:9998"
    configs:
      - source: tika_config_3
        target: /tika-config.xml
    restart: unless-stopped
    networks:
      - tika_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${TIKA_PORT:-9998}/tika"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: ${RABBITMQ_IMAGE:-rabbitmq:management}
    container_name: ${RABBITMQ_CONTAINER_NAME:-rabbitmq}
    ports:
      - "${RABBITMQ_PORT_1:-5672}:5672"
      - "${RABBITMQ_PORT_2:-15672}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-password}
    restart: unless-stopped
    networks:
      - tika_network
    healthcheck:
      test: ["CMD", "curl", "-f", "-u", "${RABBITMQ_DEFAULT_USER:-user}:${RABBITMQ_DEFAULT_PASS:-password}", "http://localhost:${RABBITMQ_PORT_2:-15672}/api/healthchecks/node"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s      

configs:
  tika_config_3:
    file: ${TIKA_CONFIG_FILE:-./tika-config.xml}

networks:
  tika_network:
    driver: bridge